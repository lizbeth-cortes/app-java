package sistema.gui;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import sistema.datos.BaseDeDatos;
import sistema.pojos.DetalleVenta;
import sistema.pojos.Producto;
import sistema.pojos.Venta;

/**
 *
 * @author Lyzz
 */
public class VentasFrame extends javax.swing.JInternalFrame {

    DefaultTableModel modeloTablaProductos = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }

    };

    DefaultListModel<Producto> modeloListaProductos = new DefaultListModel<>();
    BaseDeDatos base = new BaseDeDatos();
    /**
     * Creates new form Ventas
     */
    public VentasFrame() {
        initComponents();
        cargarColumnasTabla();
        cargarListenerModeloTabla();
    }

    // Método que carga un listener para el modelo de la tabla de productos
    public void cargarListenerModeloTabla() {
        // Añade un TableModelListener al modelo de la tabla de productos
        modeloTablaProductos.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                // Obtiene el número de filas en el modelo de la tabla de productos
                int numFilas = modeloTablaProductos.getRowCount();

                // Inicializa la variable para sumar los importes
                double sumatoria = 0;

                // Itera sobre todas las filas del modelo de la tabla
                for (int i = 0; i < numFilas; i++) {
                    // Obtiene el valor del importe de la columna 4 de la fila actual
                    String importe = (String) modeloTablaProductos.getValueAt(i, 4);

                    // Suma el importe a la sumatoria total, convirtiéndolo de String a double
                    sumatoria += Double.parseDouble(importe);
                }

                // Actualiza el texto de la etiqueta lblSumatoria con el valor de la sumatoria total
                lblSumatoria.setText(String.valueOf(sumatoria));
            }
        });
    }

    public void cargarColumnasTabla() {
        modeloTablaProductos.addColumn("Clave");
        modeloTablaProductos.addColumn("Nombre");
        modeloTablaProductos.addColumn("Precio Venta");
        modeloTablaProductos.addColumn("Cantidad");
        modeloTablaProductos.addColumn("Importe");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        campoBuscarProd = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblSumatoria = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnRealizarVenta = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        campoPagacon = new javax.swing.JTextField();
        btnQuitarProd = new javax.swing.JButton();
        btnCancelarVenta = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblImagenProd = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaBusquedas = new javax.swing.JList<>();
        btnCorteDia = new javax.swing.JButton();

        setTitle("Ventas");
        setPreferredSize(new java.awt.Dimension(1100, 666));

        tablaVentas.setModel(modeloTablaProductos);
        tablaVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaVentasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaVentas);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Buscar producto:");

        campoBuscarProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoBuscarProdKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSumatoria.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblSumatoria.setText("$0.00");
        lblSumatoria.setAlignmentY(0.0F);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Venta total:");

        btnRealizarVenta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRealizarVenta.setText("Realizar venta");
        btnRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVentaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Paga con:");

        campoPagacon.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRealizarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSumatoria, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(campoPagacon, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel3)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSumatoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoPagacon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRealizarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnQuitarProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnQuitarProd.setText("Eliminar producto");
        btnQuitarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarProdActionPerformed(evt);
            }
        });

        btnCancelarVenta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelarVenta.setText("Cancelar venta");
        btnCancelarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVentaActionPerformed(evt);
            }
        });

        lblImagenProd.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblImagenProd, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagenProd, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        listaBusquedas.setModel(modeloListaProductos);
        listaBusquedas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listaBusquedasMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(listaBusquedas);

        btnCorteDia.setText("Corte del día");
        btnCorteDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorteDiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoBuscarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnCorteDia, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(btnQuitarProd)
                                .addGap(62, 62, 62)
                                .addComponent(btnCancelarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnCorteDia, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoBuscarProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnQuitarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCorteDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorteDiaActionPerformed
        // Obtiene la fecha actual
        Calendar calendario = Calendar.getInstance();
        java.util.Date fechaActual = calendario.getTime();
        java.sql.Date fechaSQL = new java.sql.Date(fechaActual.getTime());

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String fechaFormateada = dateFormat.format(fechaActual);

        BaseDeDatos base = new BaseDeDatos();
        double totalVentas = base.obtenerTotalVentas(fechaSQL);

        JOptionPane.showMessageDialog(this, "El total de ventas del día " + fechaFormateada + " es: " + "$" + totalVentas);
    }//GEN-LAST:event_btnCorteDiaActionPerformed

    private void campoBuscarProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscarProdKeyReleased
        limpiarListaProductos();

        // Obtiene la cadena de búsqueda ingresada en el campo de búsqueda.
        String cadenaBusqueda = campoBuscarProd.getText();

        if (cadenaBusqueda.isEmpty()) {
            limpiarListaProductos();
        } else {
            // Obtiene la lista de productos que coinciden con la cadena de búsqueda.
            ArrayList<Producto> listaProductos = base.obtenerProductosPorCriterio(cadenaBusqueda);

            for (Producto prod : listaProductos) {
                modeloListaProductos.addElement(prod);
            }
        }
    }//GEN-LAST:event_campoBuscarProdKeyReleased

    private void desplegarFoto(Producto prod) {
        ImageIcon imagenProducto = null;
        try {
            //obtener imagen
            InputStream is = base.buscarFoto(prod);
            BufferedImage bi = ImageIO.read(is);
            imagenProducto = new ImageIcon(bi);

            //Redimensión de imagen para ajustarla al tamaño del JLabel
            Image imgProd = imagenProducto.getImage();
            // Obtener el ancho y alto del JLabel lblImagenArticulo
            int anchoImagen = lblImagenProd.getWidth();
            int altoImagen = lblImagenProd.getHeight();

            // Se crea un nuevo un objeto Image con la imagen redimensionada
            Image imgRedimensionada = imgProd.getScaledInstance(anchoImagen, altoImagen, Image.SCALE_DEFAULT);

            // Se crea un nuevo ImageIcon con la imagen redimensionada
            ImageIcon iconRedimensionado = new ImageIcon(imgRedimensionada);

            // Se establece el ImageIcon redimensionado como icono del JLabel
            lblImagenProd.setIcon(iconRedimensionado);
            

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    private void listaBusquedasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaBusquedasMousePressed
        // Se obtiene la fuente del evento (la lista).
        JList list = (JList) evt.getSource();

        // Se verifica si el evento es un doble clic.
        if (evt.getClickCount() == 2) {
            // Se obtiene el índice del elemento en la lista en la posición del clic.
            int index = list.locationToIndex(evt.getPoint());
            //System.out.println("El índice es: " + index); 

            // Se obtiene el producto seleccionado en la lista.
            Producto prod = (Producto) list.getSelectedValue();
            //System.out.println("El producto es: " + prod);

            // Se añade el producto a la venta.
            anadirProductoVenta(prod);

            desplegarFoto(prod);
        }
    }//GEN-LAST:event_listaBusquedasMousePressed

    // Método que se ejecuta cuando se suelta una tecla mientras la tabla de ventas está enfocada
    private void tablaVentasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaVentasKeyReleased
        // Verifica si la tecla presionada es F2
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            // Obtiene el índice de la fila seleccionada en la tabla de ventas
            int filaSeleccionada = tablaVentas.getSelectedRow();

            // Muestra un cuadro de diálogo para ingresar la nueva cantidad
            String cantidad = JOptionPane.showInputDialog("Modificar cantidad");
            // Obtiene el valor del precio de venta de la columna 2 de la fila seleccionada y lo convierte a String
            String precioVenta = (String) modeloTablaProductos.getValueAt(filaSeleccionada, 2);

            // Calcula el importe multiplicando la cantidad ingresada por el precio de venta
            double importe = Double.parseDouble(cantidad) * Double.parseDouble(precioVenta);

            // Convierte el importe calculado a una cadena de texto
            String importeString = String.valueOf(importe);

            // Actualiza el valor de la cantidad en la columna 3 de la fila seleccionada
            modeloTablaProductos.setValueAt(cantidad, filaSeleccionada, 3);

            // Actualiza el valor del importe en la columna 4 de la fila seleccionada
            modeloTablaProductos.setValueAt(importeString, filaSeleccionada, 4);

        }
    }//GEN-LAST:event_tablaVentasKeyReleased

    private void btnQuitarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarProdActionPerformed
        int filaSeleccionada = tablaVentas.getSelectedRow();

        int cantidadFilas = modeloTablaProductos.getRowCount();
        if (cantidadFilas > 0 && filaSeleccionada > -1) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este producto?");
            if (opcion == 0) {
                modeloTablaProductos.removeRow(filaSeleccionada);
                lblImagenProd.setIcon(null); // Esto eliminará la imagen del JLabel
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún elemento.");
        }

    }//GEN-LAST:event_btnQuitarProdActionPerformed

    private void btnCancelarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVentaActionPerformed
        int cantidadFilas = modeloTablaProductos.getRowCount();

        if (cantidadFilas > 0) {
            int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de cancelar la venta?");
            if (opcion == 0) {
                for (int i = cantidadFilas - 1; i >= 00; i--) {
                    modeloTablaProductos.removeRow(i);
                    lblImagenProd.setIcon(null); // Esto eliminará la imagen del JLabel
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún elemento.");
        }
        limpiarListaProductos();
        limpiarCampoBuscar();
    }//GEN-LAST:event_btnCancelarVentaActionPerformed

    private void btnRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVentaActionPerformed

        ArrayList<DetalleVenta> detalles = new ArrayList<>();
        //Obtenemos la sumatoria de la venta
        String sumatoriaStr = lblSumatoria.getText();
        String pagoConStr = campoPagacon.getText();
        if (!sumatoriaStr.contentEquals("$0.00")) {
            if (!pagoConStr.isEmpty()) {
                double montoPago = Double.parseDouble(pagoConStr);
                double montoVenta = Double.parseDouble(sumatoriaStr);
                double cambio = 0;
                cambio = montoPago - montoVenta;
                Calendar calendarioLocal = Calendar.getInstance();
                java.util.Date fechaActual = calendarioLocal.getTime();
                long fechaMilisegundos = fechaActual.getTime();
                Date fecha = new Date(fechaMilisegundos);

                Venta venta = new Venta(1, montoVenta, fecha);
                Long idVenta = base.insertarVenta(venta);

                int numRows = modeloTablaProductos.getRowCount();

                for (int i = 0; i < numRows; i++) {
                    String idProducto = (String) modeloTablaProductos.getValueAt(i, 0);
                    String cantidadStr = (String) modeloTablaProductos.getValueAt(i, 3);
                    double cantidad = Double.parseDouble(cantidadStr);
                    DetalleVenta deatalle = new DetalleVenta(idVenta, idProducto, cantidad);
                    base.insertarDetalleVenta(deatalle);
                    detalles.add(deatalle);
                }

                for (int i = numRows - 1; i >= 0; i--) {
                    modeloTablaProductos.removeRow(i);
                }
                lblSumatoria.setText("0.0");

                JOptionPane.showMessageDialog(this, "<html><h2 style='font-size:100px; color:#7EDDA6 '>" + cambio + "<h2/></html>", "Usted debe de dar este cambio", 1);
                campoPagacon.setText("");

                limpiarListaProductos();
                limpiarCampoBuscar();
                campoPagacon.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "No ha ingresado el monto del pago.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ningún elemento.");
        }
    }//GEN-LAST:event_btnRealizarVentaActionPerformed

    private void anadirProductoVenta(Producto prod) {
        String claveProd = prod.getIdProducto();
        String nombreProd = prod.getNomProducto();
        String precioVenta = String.valueOf(prod.getPrecioVentaProducto());
        String importe = String.valueOf(prod.getPrecioVentaProducto());
        String[] datosProducto = {claveProd, nombreProd, precioVenta, "1", importe};
        modeloTablaProductos.addRow(datosProducto);
    }

    private void limpiarListaProductos() {
        modeloListaProductos.clear();
    }

    private void limpiarCampoBuscar() {
        campoBuscarProd.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarVenta;
    private javax.swing.JButton btnCorteDia;
    private javax.swing.JButton btnQuitarProd;
    private javax.swing.JButton btnRealizarVenta;
    private javax.swing.JTextField campoBuscarProd;
    private javax.swing.JTextField campoPagacon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImagenProd;
    private javax.swing.JLabel lblSumatoria;
    private javax.swing.JList<Producto> listaBusquedas;
    private javax.swing.JTable tablaVentas;
    // End of variables declaration//GEN-END:variables
}
